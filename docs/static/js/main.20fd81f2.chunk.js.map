{"version":3,"sources":["images/rocket.svg","images/alive.svg","images/dead.svg","images/unknown.svg","images/alien.svg","images/human.svg","images/Rick_and_Morty.png","components/Filters.js","components/CharacterCard.js","components/Error.js","components/CharacterList.js","components/CharacterDetails.js","services/api.js","components/App.js","index.js"],"names":["module","exports","Filters","props","className","htmlFor","placeholder","id","name","type","value","searchCharacter","onChange","ev","preventDefault","currentTarget","toLowerCase","handleSearch","onKeyDown","keyCode","species","handleSpecies","disabled","defaultValue","hidden","status","handleStatus","onClick","handleReset","CharacterCard","imgURL","renderDetailsClick","to","replace","src","alt","width","Error","CharacterList","characters","map","character","key","image","errorInfo","length","CharacterDetails","alien","planet","episodes","previousCharacter","nextCharacter","rocket","height","undefined","alienIMG","human","detailsStatus","alive","unknown","dead","getDataFromApi","fetch","then","response","json","data","results","App","useState","setCharacters","setSearch","setSpecies","setStatus","useEffect","getApiData","localStorage","setItem","JSON","stringify","newSearch","parse","getItem","filterCharacters","sortedCharacters","filter","includes","sort","a","b","fixName","match","params","characterClicked","find","routeCharacterName","characterName","indexClicked","findIndex","origin","episode","logo","exact","path","searchItem","specie","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.20fd81f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rocket.fafbb619.svg\";","module.exports = __webpack_public_path__ + \"static/media/alive.8abc5116.svg\";","module.exports = __webpack_public_path__ + \"static/media/dead.a7b1462f.svg\";","module.exports = __webpack_public_path__ + \"static/media/unknown.cb192721.svg\";","module.exports = __webpack_public_path__ + \"static/media/alien.5f93ab2e.svg\";","module.exports = __webpack_public_path__ + \"static/media/human.11093ee1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rick_and_Morty.75509f2e.png\";","import React from 'react';\nimport '../stylesheets/filters.scss';\n\nconst Filters = props => {\n  const handleSearch = (ev) => {\n    ev.preventDefault();\n    const searchCharacter = ev.currentTarget.value.toLowerCase();\n    props.handleSearch(searchCharacter);\n  }\n\n  //Prevents to load page when enter is push\n  const inputEnterHandler = (ev) => {\n    let keyCode = ev.keyCode;\n    if (keyCode === 13) {\n      ev.preventDefault();\n    }\n  }\n\n  //Send reset instruction to App\n  const handleReset = ev => {\n    ev.preventDefault();\n    props.handleReset();\n  }\n\n  //Sends specie selected to App\n  const handleSpecies = ev => {\n    props.handleSpecies(ev.currentTarget.value);\n  }\n\n  //Sends status selected to App\n  const handleStatus = ev => {\n    props.handleStatus(ev.currentTarget.value);\n  }\n\n  return (\n    <div>\n      <form className=\"character__form\">\n        <label htmlFor=\"characterSearh\" className=\"character__form__fields\">\n          <input placeholder=\"Search\" id=\"characterSearch\" name=\"characterSearh\" type=\"text\" value={props.searchCharacter} onChange={handleSearch} onKeyDown={inputEnterHandler} className=\"character__form__text\"></input>\n        </label>\n        <label htmlFor=\"species\" className=\"character__form__fields\">\n          <select id=\"species\" name=\"species\" value={props.species} onChange={handleSpecies}>\n            <option value=\"\" disabled defaultValue hidden>Species</option>\n            <option value=\"alien\">Alien</option>\n            <option value=\"human\">Human</option>\n          </select>\n        </label>\n        <label htmlFor=\"status\" className=\"character__form__fields\">\n          <select id=\"status\" name=\"status\" value={props.status} onChange={handleStatus}>\n            <option value=\"\" disabled defaultValue hidden>Status</option>\n            <option value=\"alive\">Alive</option>\n            <option value=\"dead\">Dead</option>\n            <option value=\"unknown\">Unknown</option>\n          </select>\n        </label>\n        <button className=\"character__form__reset_btn\" onClick={handleReset}>Reset search</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Filters;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/characterCard.scss';\n\nconst CharacterCard = props => {\n  const { id, imgURL, name, species, renderDetailsClick } = props;\n  const renderDetailsClickCard = (ev) => {\n    const id = ev.currentTarget.id;\n    renderDetailsClick(id);\n  }\n\n  return (\n    <article className=\"character__card__container\" id={id} onClick={renderDetailsClickCard}>\n      <Link to={`/details/${name.toLowerCase().replace(' ', '')}`} className=\"character__card__link\">\n        <img src={imgURL} className=\"character__card__img\" alt={name} width=\"174px\"/>\n      </Link>\n      <h3 className=\"character__card__name\">{name}</h3>\n      <p className=\"character__card__species\">{species} </p>\n    </article>\n  );\n}\n\nCharacterCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  imgURL: PropTypes.string.isRequired,\n  species: PropTypes.string.isRequired,\n}\n\nexport default CharacterCard;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/error.scss';\n\nconst Error = props => {\n  const {searchCharacter} = props;\n  return (\n    <div>\n      <h4 className=\"errorText\">\n        There is no character matching your search\n        <span className=\"errorText__word\"> {searchCharacter}</span>\n      </h4>\n      <div>\n        <img src=\"https://media1.tenor.com/images/e620a0fbd908b1427448972e843f8b00/tenor.gif?itemid=9603354\" alt=\"sad_gif\"></img>\n      </div>\n      <div className={`return_btn_container ${searchCharacter !== '' ? 'hidden' : ''}`}>\n        <Link to =\"/\" className=\"return_btn\">\n          <span >Return</span>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nError.propTypes = {\n  searchCharacter: PropTypes.string,\n}\nexport default Error;\n\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport '../stylesheets/characterList.scss';\nimport Error from './Error';\n\n\nconst CharacterList = props => {\n  const characters = props.characters.map(character =>  {\n    return (\n      <li className=\"character\" key={character.id}>\n        <CharacterCard\n        id={character.id}\n        imgURL={character.image}\n        name={character.name}\n        species={character.species}\n        renderDetailsClick={props.renderDetailsClick}\n        />\n      </li>\n    )\n  })\n\n  const errorInfo = (\n    <Error searchCharacter={props.searchCharacter} handleReset={props.handleReset}/>\n  )\n\n  return (\n    <ul className=\"characterList\">\n    {characters.length !== 0 ? characters : errorInfo}\n    </ul>\n  );\n}\n\nexport default CharacterList;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport alive from  '../images/alive.svg';\nimport dead from  '../images/dead.svg';\nimport unknown from  '../images/unknown.svg';\nimport alienIMG from  '../images/alien.svg';\nimport human from  '../images/human.svg';\nimport rocket from  '../images/rocket.svg';\nimport '../stylesheets/characterDetails.scss';\n\n\nconst CharacterDetails = props => {\n  const {id, imgURL, name, alien, planet, episodes, status, previousCharacter, nextCharacter} = props;\n\n  //checks status and sends img URL\n  const detailsStatus = () => {\n    let detailsStatus = '';\n    if(status === \"Alive\") {\n      detailsStatus = alive;\n    } else if (status === \"Dead\") {\n      detailsStatus = dead;\n    } else {\n      return unknown;\n    }\n    return detailsStatus;\n  }\n  return (\n    <div className=\"character__detail__container\">\n      <article className={`character__detail ${id}`}>\n          <div className=\"return__btn__container\">\n            <Link to =\"/\" className=\"return_link\" >\n            <span className=\"return_btn\">Return</span>\n            </Link>\n          </div>\n          <div className=\"images_container\"   >\n            <Link to={`${previousCharacter}`} >\n              <img src={rocket} alt=\"rocketLeft\" height=\"60px\" className={`rocket_left  ${previousCharacter === undefined ? 'hidden' : ''}`} />\n              </Link>\n            <img src={imgURL} className=\"character__img\" alt={name} height=\"150px\"/>\n            <Link to={`${nextCharacter}`} >\n            <img src={rocket} alt=\"rocketRight\" height=\"60px\" className={`rocket_right  ${nextCharacter === undefined ? 'hidden' : ''}`}/>\n            </Link>\n          </div>\n          <h3 className=\"character__detail_data name\">{name}</h3>\n          <p className=\"character__detail_data planet\"><b>Planet</b>: {planet}</p>\n          <p className=\"character__detail_data episodes\"><b>Episodes</b>: {episodes} </p>\n          <p className=\"character__detail_data species\"><b>Specie:</b>\n            <img className=\"character__detail__icon\" src={`${alien ? alienIMG : human }`} alt=\"specie icon\" height=\"30px\"/>\n          </p>\n          <p className=\"character__detail_data character__detail__status\"><b>Status:</b>\n            <img className=\"character__detail__icon\" src={detailsStatus()} alt=\"status icon\" height=\"30px\"/>\n          </p>\n      </article>\n    </div>\n  )\n}\nCharacterDetails.propTypes = {\n  name: PropTypes.string.isRequired,\n  imgURL: PropTypes.string.isRequired,\n  alien: PropTypes.bool.isRequired,\n  planet: PropTypes.string.isRequired,\n  episodes: PropTypes.number.isRequired,\n  status: PropTypes.string.isRequired,\n}\n\nexport default CharacterDetails;","const URL = 'https://rickandmortyapi.com/api/character/';\n\nconst getDataFromApi = () => {\n  return fetch(URL)\n  .then(response => response.json())\n  .then(data => {\n    return data.results\n  })\n}\n\nexport default getDataFromApi;","import React, { useEffect, useState } from 'react';\nimport { Route, Switch} from 'react-router-dom';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport Error from './Error';\nimport CharacterDetails from './CharacterDetails';\nimport getApiData from '../services/api';\nimport logo from  '../images/Rick_and_Morty.png';\nimport '../stylesheets/App.scss';\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [searchCharacter, setSearch] = useState('');\n  const [species, setSpecies] = useState('');\n  const [status, setStatus] = useState('');\n\n  //Gets the data from API\n  useEffect(() => {\n    getApiData().then(data => {\n      setCharacters(data);\n    });\n  }, []);\n\n  //Receives the searched item and saves it on state\n  const handleSearch = (searchItem) => {\n    setSearch(searchItem);\n  }\n\n  //Set species with given species\n  const handleSpecies = specie => {\n    setSpecies(specie);\n  }\n  \n  //Set status with given status\n  const handleStatus = status => {\n    setStatus(status);\n  }\n\n\n  //Saves in local the searchCharacter\n  useEffect(() => {\n    localStorage.setItem('searchValue', JSON.stringify(searchCharacter));\n  }, [searchCharacter]);\n\n  //Pick the last search saved on localStorage and updates the searchCharacter\n  useEffect(() => {\n    const newSearch = JSON.parse(localStorage.getItem('searchValue'));\n    if (newSearch) {\n        setSearch(newSearch)\n    }\n  }, []);\n\n//Filters the characters by name, status and species\n  const filterCharacters = () => {\n    sortedCharacters();\n    return characters\n    .filter(character => {\n      const name = character.name.toLowerCase();\n      return name.includes(searchCharacter);\n    })\n    .filter(character => {\n      return character.status.toLowerCase().includes(status);\n    })\n    .filter(character => {\n      return character.species.toLowerCase().includes(species);\n    })\n  }\n\n  //Sort characters by alphabetical order\n  const sortedCharacters = () => {\n    characters.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n\n  //Clean from spaces the string and transform it to lower case\n  const fixName = name => {\n    if(name !== undefined) {\n      name = name.toLowerCase().replace(' ', '');\n    }\n    return name;\n  }\n\n  //Reset all filters to empty status\n  const handleReset = () => {\n    setSearch('');\n    setSpecies('');\n    setStatus('');\n  }\n\n\n  //Sends the information to detailsClickComponent depending the character clicked\n  const renderDetailsClick = props => {\n    //First checks is there's a parameter and return the matching characters\n    if(props.match.params) {\n      const characterClicked = characters.find(character => {\n        const routeCharacterName = props.match.params.characterName;\n        const name = fixName(character.name);\n        return name === routeCharacterName;\n      })\n      //Generates previous and next characters for surfing\n      if(characterClicked) {\n        const indexClicked = filterCharacters().findIndex(character => character.name === characterClicked.name);\n        let previousCharacter = undefined;\n        let nextCharacter = undefined;\n        if(indexClicked === 0 && indexClicked === filterCharacters().length -1) {\n          previousCharacter = undefined;\n          nextCharacter = undefined;\n        } else if(indexClicked === 0) {\n          nextCharacter = filterCharacters()[indexClicked + 1].name;\n        } else if(indexClicked === filterCharacters().length - 1) {\n          previousCharacter = filterCharacters()[indexClicked - 1].name;\n        } else {\n          previousCharacter = filterCharacters()[indexClicked - 1].name;\n          nextCharacter =  filterCharacters()[indexClicked + 1].name;\n        }\n        return (\n        <CharacterDetails className=\"character\"\n          id={characterClicked.id}\n          imgURL={characterClicked.image}\n          name={characterClicked.name}\n          alien={characterClicked.species === 'Alien' ? true : false}\n          planet={characterClicked.origin.name}\n          episodes={characterClicked.episode.length}\n          status={characterClicked.status}\n          previousCharacter={fixName(previousCharacter)}\n          nextCharacter={fixName(nextCharacter)}\n          />\n        );\n      } else {\n        return (\n          <div>\n            <Error searchCharacter={searchCharacter} />\n          </div>\n        )\n      }\n    }\n  }\n\n  return (\n    <div>\n      <header>\n        <div className=\"headerLogo__container\"><img src={logo} alt=\"Rick and Morty Logo\" className=\"headerLogo\"></img></div>\n      </header>\n      <main className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Filters handleSearch={handleSearch}\n            searchCharacter={searchCharacter}\n            handleReset={handleReset}\n            handleSpecies={handleSpecies}\n            handleStatus={handleStatus}\n            species={species}\n            status={status} />\n            <CharacterList\n            characters={filterCharacters()}\n            searchCharacter={searchCharacter}\n            renderDetailsClick={renderDetailsClick}\n            handleReset={handleReset}\n            />\n          </Route>\n          <Route path=\"/details/:characterName\" render={renderDetailsClick}  />\n        </Switch>\n      </main>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}