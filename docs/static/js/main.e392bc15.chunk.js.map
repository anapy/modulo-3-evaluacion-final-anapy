{"version":3,"sources":["images/Rick_and_Morty.png","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetails.js","services/api.js","components/App.js","index.js"],"names":["module","exports","Filters","props","htmlFor","id","name","type","value","searchCharacter","onChange","ev","currentTarget","toLowerCase","handleSearch","onClick","preventDefault","CharacterCard","className","renderDetailsClick","to","replace","src","imgURL","alt","width","species","CharacterList","characters","map","character","key","image","errorInfo","title","frameBorder","allowFullScreen","length","CharacterDetails","console","log","style","textDecoration","fontFamily","color","planet","episodes","status","getDataFromApi","fetch","then","response","json","data","results","App","useState","setCharacters","setSearch","useEffect","getApiData","match","params","characterClicked","find","routeCharacterName","characterName","includes","origin","episode","logo","exact","path","searchItem","filter","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e392bc15.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rick_and_Morty.75509f2e.png\";","import React from 'react';\nimport '../stylesheets/filters.scss';\n\nconst Filters = props => {\n  const prevent = ev => ev.preventDefault();\n\n  const handleSearch = (ev) => {\n    const searchCharacter = ev.currentTarget.value.toLowerCase()\n    props.handleSearch(searchCharacter);\n  }\n  return (\n  <div>\n    <form>\n      <label htmlFor=\"characterSearh\">\n        <input id=\"characterSearh\" name=\"characterSearh\" type=\"text\" value={props.searchCharacter} onChange={handleSearch} onClick={prevent}></input>\n      </label>\n    </form>\n  </div>\n  );\n}\n\nexport default Filters;\n","import React from 'react';\nimport '../stylesheets/characterCard.scss';\nimport { Link} from 'react-router-dom';\n\n\n\nconst CharacterCard = props => {\n  const renderDetailsClick = (ev) => {\n    props.renderDetailsClick(ev.currentTarget.id);\n  }\n\n  return (\n    <article className=\"character__container\" id={props.name} onClick={renderDetailsClick}>\n      <Link to={`/details/${props.name.toLowerCase().replace(' ', '')}`} className=\"details_link\">\n      <img src={props.imgURL} className=\"character__img\" alt={props.name} width=\"174px\"/>\n      </Link>\n      <h3 className=\"character__name\">{props.name}</h3>\n      <p className=\"character__species\">{props.species} </p>\n    </article>\n  );\n}\n\nexport default CharacterCard;","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport '../stylesheets/characterList.scss';\n\nconst CharacterList = props => {\n  const characters = props.characters.map(character =>  {\n    return (\n      <li className=\"character\" key={character.id}>\n        <CharacterCard\n        id={character.id}\n        imgURL={character.image}\n        name={character.name}\n        species={character.species}\n        renderDetailsClick={props.renderDetailsClick}\n        errorInfo={props.errorInfo}\n        />\n      </li>\n    )\n  })\n\n  const errorInfo = (\n    <div>\n      <h4 className=\"errorText\">No hay ningún personaje que coincida con la búsqueda<span className=\"errorText__word\">\"{props.searchCharacter}\"</span></h4>\n      <div>\n        <iframe title=\"sad\" src=\"https://giphy.com/embed/RH1IFq2GT0Oau8NRWX\" width=\"200px\" frameBorder=\"0\" allowFullScreen></iframe>\n      </div>\n    </div>\n  )\n\n  return (\n    <ul className=\"characterList\">\n    {characters.length !== 0 ? characters : errorInfo}\n    </ul>\n  );\n}\n\nexport default CharacterList;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/characterDetails.scss';\n\n\nconst CharacterDetails = props => {\n  console.log(props)\n  return (\n      <article className=\"character_details\">\n        <Link to =\"/\" style={{ textDecoration: 'none', fontFamily:'inherit', color:'inherit' }}>\n        <p>Return</p>\n        </Link>\n        <img src={props.imgURL} className=\"card__img\" alt={props.name} />\n        <h3 className=\"card__title\">{props.name}</h3>\n        <p className=\"card__description\">{props.species}</p>\n        <p className=\"card__description\">{props.planet}</p>\n        <p className=\"card__description\">{props.episodes}</p>\n        <p className=\"card__description\">{props.status}</p>\n      </article>\n \n  )\n}\n\nexport default CharacterDetails;","const URL = 'https://rickandmortyapi.com/api/character/';\n\nconst getDataFromApi = () => {\n  return fetch(URL)\n  .then(response => response.json())\n  .then(data => {\n    return data.results\n  })\n}\n\nexport default getDataFromApi;","import React, { useEffect, useState } from 'react';\nimport '../stylesheets/App.scss';\nimport '../stylesheets/reset.scss';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport CharacterDetails from './CharacterDetails';\nimport getApiData from '../services/api';\nimport logo from  '../images/Rick_and_Morty.png';\nimport { Route, Switch } from 'react-router-dom';\n\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [searchCharacter , setSearch] = useState('');\n\n  const handleSearch = (searchItem) => {\n    console.log(searchItem);\n    setSearch(searchItem);\n  }\n\n  useEffect(() => {\n    getApiData().then(data => {\n      setCharacters(data);\n    });\n  }, []);\n\n  const filterCharacters = () => {\n    return characters.filter(character => {\n      const name = character.name.toLowerCase();\n      return name.includes(searchCharacter);\n    })\n  }\n\n  const errorInfo = (\n    <div>\n      <h4 className=\"errorText\">No hay ningún personaje que coincida con la búsqueda<span className=\"errorText__word\">\"{searchCharacter}\"</span></h4>\n      <div>\n        <iframe title=\"sad\" src=\"https://giphy.com/embed/RH1IFq2GT0Oau8NRWX\" width=\"200px\" frameBorder=\"0\" allowFullScreen></iframe>\n      </div>\n    </div>\n  )\n\n  const renderDetailsClick = props => {\n    const routeCharacterName  = '';\n    if(props.match.params) {\n      const characterClicked = characters.find(character => {\n        const routeCharacterName = props.match.params.characterName;\n        const name = character.name.toLowerCase().replace(' ', '');\n        return name.includes(routeCharacterName);\n      })\n      console.log(routeCharacterName);\n      if(characterClicked) {\n        return (\n        <CharacterDetails className=\"character\" key={characterClicked.id}\n          imgURL={characterClicked.image}\n          name={characterClicked.name}\n          species={characterClicked.species}\n          planet={characterClicked.origin.name}\n          episodes={characterClicked.episode.length}\n          status={characterClicked.status}\n          />\n        );\n      } else {\n        return (\n          <div>\n            {errorInfo}\n          </div>\n          )\n      }\n\n  }\n  }\n\n  return (\n    <div>\n      <header>\n        <div className=\"headerLogo__container\"><img src={logo} alt=\"Rick and Morty Logo\" className=\"headerLogo\"></img></div>\n      </header>\n      <main className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Filters handleSearch={handleSearch} searchCharacter={searchCharacter}/>\n            <CharacterList characters={filterCharacters()} searchCharacter={searchCharacter} renderDetailsClick={renderDetailsClick} errorInfo={errorInfo}/>\n          </Route>\n          <Route path=\"/details/:characterName\" render={renderDetailsClick} />\n        </Switch>\n      </main>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}