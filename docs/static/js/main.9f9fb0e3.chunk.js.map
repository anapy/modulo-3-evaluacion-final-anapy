{"version":3,"sources":["images/rocket.svg","images/alive.svg","images/dead.svg","images/unknown.svg","images/alien.svg","images/human.svg","images/Rick_and_Morty.png","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetails.js","services/api.js","components/App.js","index.js"],"names":["module","exports","Filters","props","htmlFor","placeholder","id","name","type","value","searchCharacter","onChange","ev","preventDefault","currentTarget","toLowerCase","handleSearch","onKeyDown","keyCode","species","handleSpecies","disabled","defaultValue","hidden","status","handleStatus","className","onClick","handleReset","CharacterCard","renderDetailsClick","to","replace","src","imgURL","alt","width","CharacterList","characters","map","character","key","image","errorInfo","searchNewIndex","title","frameBorder","allowFullScreen","length","CharacterDetails","previousCharacter","rocket","height","undefined","nextCharacter","planet","episodes","alien","human","alive","unknown","dead","getDataFromApi","fetch","then","response","json","data","results","App","useState","setCharacters","setSearch","setSpecies","setStatus","useEffect","getApiData","newSearch","JSON","parse","localStorage","getItem","setItem","stringify","filterCharacters","sortedCharacters","filter","includes","sort","a","b","style","textDecoration","fontFamily","color","fixName","match","params","characterClicked","find","routeCharacterName","characterName","indexClicked","findIndex","origin","episode","logo","exact","path","searchItem","specie","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9f9fb0e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rocket.fafbb619.svg\";","module.exports = __webpack_public_path__ + \"static/media/alive.8abc5116.svg\";","module.exports = __webpack_public_path__ + \"static/media/dead.a7b1462f.svg\";","module.exports = __webpack_public_path__ + \"static/media/unknown.cb192721.svg\";","module.exports = __webpack_public_path__ + \"static/media/alien.5f93ab2e.svg\";","module.exports = __webpack_public_path__ + \"static/media/human.11093ee1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rick_and_Morty.75509f2e.png\";","import React from 'react';\nimport '../stylesheets/filters.scss';\n\nconst Filters = props => {\n  const handleSearch = (ev) => {\n    ev.preventDefault();\n    const searchCharacter = ev.currentTarget.value.toLowerCase()\n    props.handleSearch(searchCharacter);\n  }\n\n  const inputEnterHandler = (ev) => {\n    let keyCode = ev.keyCode;\n    if (keyCode === 13) {\n      ev.preventDefault();\n    }\n  }\n\n  const handleReset = ev => {\n    ev.preventDefault();\n    props.handleReset();\n  }\n\n  const handleSpecies = ev => {\n    props.handleSpecies(ev.currentTarget.value);\n  }\n  const handleStatus = ev => {\n    props.handleStatus(ev.currentTarget.value);\n  }\n\n  return (\n  <div>\n    <form>\n      <label htmlFor=\"characterSearh\">\n        <input placeholder=\"Search\" id=\"characterSearh\" name=\"characterSearh\" type=\"text\" value={props.searchCharacter} onChange={handleSearch} onKeyDown={inputEnterHandler}></input>\n      </label>\n      <label htmlFor=\"species\">\n        <select id=\"species\" name=\"species\" value={props.species} onChange={handleSpecies}>\n          <option value=\"\" disabled defaultValue hidden>Species</option>\n          <option value=\"alien\">Alien</option>\n          <option value=\"human\">Human</option>\n        </select>\n      </label>\n      <label htmlFor=\"status\">\n        <select id=\"status\" name=\"status\" value={props.status} onChange={handleStatus}>\n          <option value=\"\" disabled defaultValue hidden>Status</option>\n          <option value=\"alive\">Alive</option>\n          <option value=\"dead\">Dead</option>\n          <option value=\"unknown\">Unknown</option>\n        </select>\n      </label>\n      <button className=\"reset_btn\" onClick={handleReset}>Reset search</button>\n    </form>\n  </div>\n  );\n}\n\nexport default Filters;\n","import React from 'react';\nimport '../stylesheets/characterCard.scss';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n\nconst CharacterCard = props => {\n  const renderDetailsClick = (ev) => {\n    const id = ev.currentTarget.id;\n    props.renderDetailsClick(id);\n  }\n\n  return (\n    <article className=\"character__container\" id={props.name} onClick={renderDetailsClick}>\n      <Link to={`/details/${props.name.toLowerCase().replace(' ', '')}`} className=\"details_link\">\n        <img src={props.imgURL} className=\"character__img\" alt={props.name} width=\"174px\"/>\n      </Link>\n      <h3 className=\"character__name\">{props.name}</h3>\n      <p className=\"character__species\">{props.species} </p>\n    </article>\n  );\n}\n\nCharacterCard.propTypes = {\n  name: PropTypes.string,\n  imgURL: PropTypes.string,\n  species: PropTypes.string,\n}\n\nexport default CharacterCard;","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport '../stylesheets/characterList.scss';\n\nconst CharacterList = props => {\n  const characters = props.characters.map(character =>  {\n    return (\n      <li className=\"character\" key={character.id}>\n        <CharacterCard\n        id={character.id}\n        imgURL={character.image}\n        name={character.name}\n        species={character.species}\n        renderDetailsClick={props.renderDetailsClick}\n        errorInfo={props.errorInfo}\n        searchNewIndex={props.searchNewIndex}\n        />\n      </li>\n    )\n  })\n\n  const errorInfo = (\n    <div>\n      <h4 className=\"errorText\">No hay ningún personaje que coincida con la búsqueda<span className=\"errorText__word\">\"{props.searchCharacter}\"</span></h4>\n      <div>\n        <iframe title=\"sad\" src=\"https://giphy.com/embed/RH1IFq2GT0Oau8NRWX\" width=\"200px\" frameBorder=\"0\" allowFullScreen></iframe>\n      </div>\n    </div>\n  )\n\n  return (\n    <ul className=\"characterList\">\n    {characters.length !== 0 ? characters : errorInfo}\n    </ul>\n  );\n}\n\nexport default CharacterList;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport '../stylesheets/characterDetails.scss';\nimport PropTypes from 'prop-types';\nimport alive from  '../images/alive.svg';\nimport dead from  '../images/dead.svg';\nimport unknown from  '../images/unknown.svg';\nimport alien from  '../images/alien.svg';\nimport human from  '../images/human.svg';\nimport rocket from  '../images/rocket.svg';\n\n\nconst CharacterDetails = props => {\n  const status = () => {\n    let status = '';\n    if(props.status === \"Alive\") {\n      status = alive;\n    } else if (props.status === \"Dead\") {\n      status = dead;\n    } else {\n      return unknown;\n    }\n    return status;\n  }\n  return (\n    <div className=\"detail__container\">\n      <article className=\"character__detail\">\n          <div className=\"return_btn_container\">\n            <Link to =\"/\" className=\"return_link\" >\n            <span className=\"return_btn\">Return</span>\n            </Link>\n          </div>\n          <div className=\"images_container\"   >\n            <Link to={`${props.previousCharacter}`} >\n              <img src={rocket} alt=\"rocket\" height=\"60px\" className={`rocket_left  ${props.previousCharacter === undefined ? 'hidden' : ''}`} />\n              </Link>\n            <img src={props.imgURL} className=\"character__img\" alt={props.name} height=\"150px\"/>\n            <Link to={`${props.nextCharacter}`} >\n            <img src={rocket} alt=\"rocket\" height=\"60px\" className={`rocket_right  ${props.nextCharacter === undefined ? 'hidden' : ''}`}/>\n            </Link>\n          </div>\n          <h3 className=\"detail_data character__detail__name\">{props.name}</h3>\n          <p className=\"detail_data character__detail__planet\"><b>Planet</b>: {props.planet}</p>\n          <p className=\"detail_data character__detail__episodes\"><b>Episodes</b>: {props.episodes} </p>\n          <p className=\"detail_data character__detail__species\"><b>Specie:</b>\n            <img className=\"character__detail__icon\" src={`${props.alien ? alien : human }`} alt=\"status icon\" height=\"30px\"/>\n          </p>\n          <p className=\"detail_data character__detail__status\"><b>Status:</b>\n            <img className=\"character__detail__icon\" src={`${status()}`} alt=\"status icon\" height=\"30px\"/>\n          </p>\n      </article>\n    </div>\n  )\n}\nCharacterDetails.propTypes = {\n  name: PropTypes.string,\n  imgURL: PropTypes.string,\n  human: PropTypes.bool,\n  planet: PropTypes.string,\n  episodes: PropTypes.number,\n  status: PropTypes.string,\n}\n\nexport default CharacterDetails;","const URL = 'https://rickandmortyapi.com/api/character/';\n\nconst getDataFromApi = () => {\n  return fetch(URL)\n  .then(response => response.json())\n  .then(data => {\n    return data.results\n  })\n}\n\nexport default getDataFromApi;","import React, { useEffect, useState } from 'react';\nimport '../stylesheets/App.scss';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport CharacterDetails from './CharacterDetails';\nimport getApiData from '../services/api';\nimport logo from  '../images/Rick_and_Morty.png';\nimport { Route, Switch, Link } from 'react-router-dom';\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [searchCharacter, setSearch] = useState('');\n  const [species, setSpecies] = useState('');\n  const [status, setStatus] = useState('');\n\n  const handleSearch = (searchItem) => {\n    setSearch(searchItem);\n  }\n\n  useEffect(() => {\n    getApiData().then(data => {\n      setCharacters(data);\n    });\n  }, []);\n\n  //Recoge la última búsqueda que se haya quedado pendiente en la página y actualiza el estado del el personaje buscado\n  useEffect(() => {\n    const newSearch = JSON.parse(localStorage.getItem('searchValue'));\n    if (newSearch) {\n        setSearch(newSearch)\n    }\n  }, []);\n\n  //almacena en el local el campo personaje buscado\n  useEffect(() => {\n    localStorage.setItem('searchValue', JSON.stringify(searchCharacter));\n  }, [searchCharacter]);\n\n  const filterCharacters = () => {\n    sortedCharacters();\n    return characters\n    .filter(character => {\n      const name = character.name.toLowerCase();\n      return name.includes(searchCharacter);\n    })\n    .filter(character => {\n      return character.status.toLowerCase().includes(status);\n    })\n    .filter(character => {\n      return character.species.toLowerCase().includes(species);\n    })\n  }\n\n  const sortedCharacters = () => {\n    characters.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n\n  const errorInfo = (\n    <div>\n      <h4 className=\"errorText\">No hay ningún personaje que coincida con la búsqueda\n        <span className=\"errorText__word\">{searchCharacter}</span>\n      </h4>\n      <div>\n        <iframe title=\"sad\" src=\"https://giphy.com/embed/RH1IFq2GT0Oau8NRWX\" frameBorder=\"0\"></iframe>\n      </div>\n      <div className=\"return_btn_container\">\n      <Link to =\"/\" style={{ textDecoration: 'none', fontFamily:'inherit', color:'inherit' }}>\n        <span className=\"return_btn\">Return</span>\n      </Link>\n      </div>\n    </div>\n  )\n\n  const fixName = name => {\n    if(name !== undefined) {\n      name = name.toLowerCase().replace(' ', '');\n    }\n    return name;\n  }\n\n  const handleReset = () => {\n    setSearch('');\n    setSpecies('');\n    setStatus('');\n  }\n\n  const handleSpecies = specie => {\n    setSpecies(specie);\n  }\n  const handleStatus = status => {\n    setStatus(status);\n  }\n\n  const renderDetailsClick = props => {\n    if(props.match.params) {\n      const characterClicked = characters.find(character => {\n        const routeCharacterName = props.match.params.characterName;\n        const name = character.name.toLowerCase().replace(' ', '');\n        return name === routeCharacterName;\n      })\n      if(characterClicked) {\n        const indexClicked = filterCharacters().findIndex(character => character.name === characterClicked.name);\n        let previousCharacter = undefined;\n        let nextCharacter = undefined;\n        if(indexClicked === 0 && indexClicked === filterCharacters().length -1) {\n          previousCharacter = undefined;\n          nextCharacter = undefined;\n        } else if(indexClicked === 0) {\n          nextCharacter = filterCharacters()[indexClicked + 1].name;\n        } else if(indexClicked === filterCharacters().length - 1) {\n          previousCharacter = filterCharacters()[indexClicked - 1].name;\n        } else {\n          previousCharacter = filterCharacters()[indexClicked - 1].name;\n          nextCharacter =  filterCharacters()[indexClicked + 1].name;\n        }\n        return (\n        <CharacterDetails className=\"character\"\n          id={characterClicked.id}\n          imgURL={characterClicked.image}\n          name={characterClicked.name}\n          alien={characterClicked.species === 'Alien' ? true : false}\n          planet={characterClicked.origin.name}\n          episodes={characterClicked.episode.length}\n          status={characterClicked.status}\n          characters={filterCharacters()}\n          previousCharacter={fixName(previousCharacter)}\n          nextCharacter={fixName(nextCharacter)}\n          />\n        );\n      } else {\n        return (\n          <div>\n            {errorInfo}\n          </div>\n        )\n      }\n    }\n  }\n  return (\n    <div>\n      <header>\n        <div className=\"headerLogo__container\"><img src={logo} alt=\"Rick and Morty Logo\" className=\"headerLogo\"></img></div>\n      </header>\n      <main className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Filters handleSearch={handleSearch}\n            searchCharacter={searchCharacter}\n            handleReset={handleReset}\n            handleSpecies={handleSpecies}\n            handleStatus={handleStatus}\n            species={species}\n            status={status} />\n            <CharacterList\n            characters={filterCharacters()}\n            searchCharacter={searchCharacter}\n            renderDetailsClick={renderDetailsClick}\n            errorInfo={errorInfo}\n            />\n          </Route>\n          <Route path=\"/details/:characterName\" render={renderDetailsClick}  />\n        </Switch>\n      </main>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}